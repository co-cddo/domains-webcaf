name: Build & Publish Docker to ECR (Production)

#Runs on creation of a release tag. Image is deployed to production environment.
#Tag is only considered if it starts with "release-" and from the main branch.
on:
  push:
    tags:
      - "release-*"

permissions:
  id-token: write   # required for AWS OIDC
  contents: read
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Derive image name
        id: image_name
        run: |
          RELEASE_TAG="${GITHUB_REF_NAME}"
          BASE_IMAGE="web-caf-app-ecr"

          echo "Image name is : $BASE_IMAGE"
          echo "Release tag is : $RELEASE_TAG"
          echo "IMAGE_NAME=$BASE_IMAGE" >> $GITHUB_OUTPUT
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT

      - name: Ensure release tag is from main
        if: startsWith(github.ref_name, 'release-')
        run: |
            # Fetch the main branch to compare
            git fetch origin main --depth=1

            TAG_COMMIT=$(git rev-list -n 1 "${GITHUB_REF_NAME}")
            MAIN_COMMIT=$(git rev-parse origin/main)

            # Check if the tag commit exists in the main branch history
            if git merge-base --is-ancestor "$TAG_COMMIT" "origin/main"; then
            echo "✅ Tag ${GITHUB_REF_NAME} is based on main."
            else
            echo "❌ Tag ${GITHUB_REF_NAME} is NOT based on main."
            exit 1
            fi
      - name: Configure AWS credentials (Prod)
        if: startsWith(github.ref_name, 'release-')
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838
        with:
          role-to-assume: arn:aws:iam::${{ secrets.PROD_ACCOUNT_ID }}:role/github-actions-ecr-role-web-caf-app-ecr
          aws-region: eu-west-2
      - name: Log in to Amazon ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
      - name: Build, Tag, and Push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          IMAGE_NAME: ${{ steps.image_name.outputs.IMAGE_NAME }}
          RELEASE_TAG: ${{ steps.image_name.outputs.RELEASE_TAG }}
        run: |
          IMAGE_TAG=${GITHUB_SHA::7}   # short commit SHA as the tag
          echo "Pushing image: $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
          docker buildx build --platform linux/amd64 \
          -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \
          -t $ECR_REGISTRY/$IMAGE_NAME:$RELEASE_TAG \
          -t $ECR_REGISTRY/$IMAGE_NAME:latest  \
          . --push;
