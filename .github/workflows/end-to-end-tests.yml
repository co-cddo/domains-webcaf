name: End-to-end tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: webcaf
          POSTGRES_USER: webcaf
          POSTGRES_PASSWORD: webcaf
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      dex:
        image: ghcr.io/dexidp/dex:latest
        ports:
          - "5556:5556"
        options: >-
          --name dex
          --volume ${{ github.workspace }}/oauth-stub:/etc/dex
          --entrypoint dex

    steps:
    - name: Install pyenv and Python
      run: |
        curl https://pyenv.run | bash && \
        export PYENV_ROOT="$HOME/.pyenv" && \
        [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH" && \
        eval "$(pyenv init -)" && \
        for repo in ~/.pyenv/plugins/*/ ~/.pyenv/; do [[ -d "$repo/.git" ]] && (cd "$repo" && git remote set-head origin -a); done && \
        pyenv update && \
        pyenv install 3.12 && \
        pyenv global 3.12 && \
        pyenv rehash
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade poetry pre-commit
        poetry install --no-root
    - name: Install playwright for end-to-end testing
      run: |
        poetry add pytest-playwright && \
        poetry run playwright install --with-deps
    - name: Prepare server
      env:
        SECRET_KEY: unused
        DATABASE_URL: postgresql://webcaf:webcaf@localhost:5432/webcaf
        DOMAIN_NAME: http://localhost:8010
        SSO_MODE: local
      run: |
        poetry run ./manage.py collectstatic --noinput
        poetry run ./manage.py migrate --noinput
    - name: Start server for end-to-end testing
      env:
        SECRET_KEY: unused
        DATABASE_URL: postgresql://webcaf:webcaf@localhost:5432/webcaf
        SSO_MODE: local
      run: |
        poetry run ./manage.py runserver 0.0.0.0:8010 &
        until curl -s -o /dev/null http://localhost:8010; do sleep 1; done
    - name: Run end-to-end tests
      run: |
        cd end-to-end-tests && \
        poetry run pytest --tracing=retain-on-failure
