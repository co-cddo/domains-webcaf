# Generated by Django 5.1.13 on 2025-10-22 14:29

import django.db.models.deletion
import multiselectfield.db.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("webcaf", "0014_alter_system_hosting_type"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalOrganisation",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("name", models.CharField(db_index=True, max_length=255)),
                ("reference", models.CharField(db_index=True, max_length=20, null=True)),
                (
                    "organisation_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ad-hoc-advisory-group", "Ad-hoc advisory group"),
                            ("advisory-non-departmental-public-body", "Advisory non-departmental public body"),
                            ("agency-or-other-public-body", "Agency or other public body"),
                            ("devolved-administration", "Devolved administration"),
                            ("executive-agency", "Executive agency"),
                            ("executive-non-departmental-public-body", "Executive non-departmental public body"),
                            ("executive-office", "Executive office"),
                            ("high-profile-group", "High profile group"),
                            ("ministerial-department", "Ministerial department"),
                            ("non-ministerial-department", "Non-ministerial department"),
                            ("public-corporation", "Public corporation"),
                            ("tribunal", "Tribunal"),
                            ("other", "Other"),
                        ],
                        default=None,
                        max_length=255,
                        null=True,
                    ),
                ),
                ("contact_name", models.CharField(blank=True, max_length=255, null=True)),
                ("contact_email", models.EmailField(blank=True, max_length=254, null=True)),
                ("contact_role", models.CharField(blank=True, max_length=255, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_organisation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="webcaf.organisation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical organisation",
                "verbose_name_plural": "historical organisations",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSystem",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("reference", models.CharField(db_index=True, max_length=20, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "system_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("directly_delivers_public_services", "It directly delivers public services"),
                            (
                                "supports_other_critical_systems",
                                "It provides core infrastructure essential for other critical systems to function",
                            ),
                            (
                                "is_critical_for_day_to_day_operations",
                                "It provides corporate services or functions required for day-to-day operations for example, payroll",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "system_owner",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("owned_by_organisation_being_assessed", "The organisation being assessed"),
                            ("owned_by_another_government_organisation", "Another government organisation"),
                            ("owned_by_third_party_company", "Third-party company"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "hosting_type",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("hosted_on_premises", "On-premises"),
                            ("hosted_on_cloud", "Cloud hosted"),
                            ("hosted_hybrid", "Hybrid"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "last_assessed",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("assessed_in_2324", "Yes, in 2023/24"),
                            ("assessed_in_2425", "Yes, in 2024/25"),
                            ("assessed_in_2324_and_2425", "Yes, in both 2023/24 and 2024/25"),
                            ("assessed_not_done", "No, it has not been assessed before"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "corporate_services",
                    multiselectfield.db.fields.MultiSelectField(
                        blank=True,
                        choices=[
                            ("email_and_communication", "Email and communication"),
                            ("office_productivity", "Office productivity"),
                            ("document_storage_and_management", "Document storage and management"),
                            ("hr", "HR"),
                            ("payroll", "Payroll"),
                            ("procurement_and_contract_management", "Procurement and contract management"),
                            ("customer_relationship_management", "Customer relationship management"),
                            ("help_desk_it_support", "Help desk / IT support"),
                            ("data_management_analytics", "Data management / analytics"),
                            ("none", "None of the above"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="webcaf.organisation",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical system",
                "verbose_name_plural": "historical systems",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalUserProfile",
            fields=[
                ("id", models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("cyber_advisor", "GDS cyber advisor"),
                            ("organisation_lead", "Organisation lead"),
                            ("organisation_user", "Organisation user"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organisation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="webcaf.organisation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical user profile",
                "verbose_name_plural": "historical user profiles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
